@model App.Marriage.Models.Users

@{
    ViewBag.Title = "Create";
}

<body dir="rtl">
    .rtl {
    direction: RTL;
    }

    @using (Html.BeginForm())
    {
        @Html.AntiForgeryToken()

        <div class="form-horizontal" dir="rtl">
            <h4>Users</h4>
            <hr />
            @Html.ValidationSummary(true, "", new { @class = "text-danger" })
            <div class="form-group" dir="rtl">
                
                @Html.LabelFor(model => model.UserName, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.UserName, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.UserName, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.UserPassword, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.UserPassword, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.UserPassword, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.IsActive, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    <div class="checkbox">
                        @Html.EditorFor(model => model.IsActive)
                        @Html.ValidationMessageFor(model => model.IsActive, "", new { @class = "text-danger" })
                    </div>
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.UserType, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.UserType, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.UserType, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.Role_Id, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @*
                        @Html.DropDownListFor(model => model.Role_Id, new SelectList(new List<Object> {
                            new { value=1, text="option1"},
                            new { value=2, text="option2"},
                            new { value=3, text="option3"}
                            }, "value","text",2))*@
                    @*

                         @Html.DropDownListFor(model => model.Role_Id, new SelectList
                        @Html.EditorFor(model => model.Role_Id, new { htmlAttributes = new { @class = "form-control" } })*@


                    @Html.DropDownListFor(model => model.Role_Id, ViewData["roles"] as List<SelectListItem>)

                    @Html.ValidationMessageFor(model => model.Role_Id, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                <div class="col-md-offset-2 col-md-10">
                    <input type="submit" value="Create" class="btn btn-default" />
                </div>
            </div>
        </div>
    }

    <div>
        @Html.ActionLink("Back to List", "Index")
    </div>
</body>
@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
}
