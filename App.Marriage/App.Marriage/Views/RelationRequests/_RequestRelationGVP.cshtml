@using App.Marriage.Utils
@using App.Marriage.DAL
@{
    var grid = Html.DevExpress().GridView(settings => {
        settings.Name = "RequestRelationGV";
        settings.CallbackRouteValues = new { Controller = "RelationRequests", Action = "RequestRelationGVP" };

        settings.SettingsEditing.AddNewRowRouteValues = new { Controller = "RelationRequests", Action = "RequestRelationGVPAddNew" };
        settings.SettingsEditing.UpdateRowRouteValues = new { Controller = "RelationRequests", Action = "RequestRelationGVPUpdate" };
        settings.SettingsEditing.DeleteRowRouteValues = new { Controller = "RelationRequests", Action = "RequestRelationGVPDelete" };
        settings.SettingsEditing.Mode = GridViewEditingMode.EditFormAndDisplayRow;
        settings.SettingsBehavior.ConfirmDelete = true;

        settings.CommandColumn.Visible = false;
        settings.CommandColumn.ShowNewButtonInHeader = true;
        settings.CommandColumn.ShowDeleteButton = false;
        settings.CommandColumn.ShowEditButton = true;

        settings.KeyFieldName = "Id";

        settings.SettingsPager.Visible = true;
        settings.Settings.ShowGroupPanel = true;
        settings.Settings.ShowFilterRow = true;
        settings.SettingsBehavior.AllowSelectByRowClick = true;

        settings.SettingsAdaptivity.AdaptivityMode = GridViewAdaptivityMode.Off;
        settings.SettingsAdaptivity.AdaptiveColumnPosition = GridViewAdaptiveColumnPosition.Right;
        settings.SettingsAdaptivity.AdaptiveDetailColumnCount = 1;
        settings.SettingsAdaptivity.AllowOnlyOneAdaptiveDetailExpanded = false;
        settings.SettingsAdaptivity.HideDataCellsAtWindowInnerWidth = 0;

        settings.Columns.Add("Id").Visible=false;
        int i = 0;

        settings.Columns.Add(column =>
        {
            column.VisibleIndex = i;
            column.SetDataItemTemplateContent(p =>
            {
                ViewContext.Writer.Write(string.Format("<a href='RelationRequests/Details?Id={0}' class='btn btn-info' role='button'>{1}</a>", DataBinder.Eval(p.DataItem, "Id"), "عرض الطلب"));

            });
        });

        settings.Columns.Add(column =>
        {
            column.FieldName = "RequestUser_Id";
            column.Caption = Globalization.RequestUserName;
            column.EditFormSettings.Visible = DefaultBoolean.True;
            column.EditFormSettings.VisibleIndex = i + 1;
            column.VisibleIndex = i;
            column.Visible = true;
            column.EditorProperties().ComboBox(p =>
            {
                p.TextField = "Name";
                p.ValueField = "Id";
                p.ValueType = typeof(int);
                p.DataSource = UserDAL.GetUsersNamesComboList();
            });
        });
        settings.Columns.Add("RegisterRequests_Id").Visible= false;
        settings.Columns.Add(column =>
        {
            column.FieldName = "TargetUser_Id";
            column.Caption = Globalization.TargetUserName;
            column.EditFormSettings.Visible = DefaultBoolean.True;
            column.EditFormSettings.VisibleIndex = i + 1;
            column.VisibleIndex = i;
            column.Visible = true;
            column.EditorProperties().ComboBox(p =>
            {
                p.TextField = "Name";
                p.ValueField = "Id";
                p.ValueType = typeof(int);
                p.DataSource = UserDAL.GetUsersNamesComboList();
            });
        });
        settings.Columns.Add(column =>
        {
            column.FieldName = "RequestDate";
            column.Caption = Globalization.RequestDate;
            column.EditFormSettings.VisibleIndex = i + 1;
            column.VisibleIndex = i;
            column.EditFormSettings.Visible = DefaultBoolean.True;
            column.Visible = true;
            column.ColumnType = MVCxGridViewColumnType.DateEdit;
        });
        settings.Columns.Add(column =>
        {
            column.FieldName = "RequestMessage";
            column.Caption = Globalization.RequestMessage;
            column.EditFormSettings.VisibleIndex = i + 1;
            column.VisibleIndex = i;
            column.EditFormSettings.Visible = DefaultBoolean.True;
            column.Visible = true;
            column.ColumnType = MVCxGridViewColumnType.Memo;
            column.EditorProperties().Memo(p => {
                p.Height = 70;
            });
        });
        settings.Columns.Add(column =>
        {
            column.FieldName = "ResponseMessage";
            column.Caption = Globalization.ResponseMessage;
            column.EditFormSettings.VisibleIndex = i + 1;
            column.VisibleIndex = i;
            column.EditFormSettings.Visible = DefaultBoolean.True;
            column.Visible = true;
            column.EditorProperties().Memo(p =>
            {
                p.Height = 70;
            });
        });
        settings.Columns.Add(column =>
        {
            column.FieldName = "RequestStatus";
            column.Caption = Globalization.RequestStatus;
            column.EditFormSettings.Visible = DefaultBoolean.True;
            column.EditFormSettings.VisibleIndex = i + 1;
            column.VisibleIndex = i;
            column.Visible = true;
            column.EditorProperties().ComboBox(p =>
            {
                p.TextField = "Name";
                p.ValueField = "Id";
                p.ValueType = typeof(string);
                p.DataSource = EnumDAL.GetEnumsComboList(EnumType.RelationStatus.ToString());
            });
        });
        settings.Columns.Add(column =>
        {
            column.FieldName = "AllowChatRoom";
            column.Caption = Globalization.AllowChatRoom;
            column.EditFormSettings.VisibleIndex = i + 1;
            column.VisibleIndex = i;
            column.ColumnType = MVCxGridViewColumnType.CheckBox;
            column.EditFormSettings.Visible = DefaultBoolean.True;
            column.Visible = true;
        });
        settings.Columns.Add(column =>
        {
            column.FieldName = "ResponsibleManager_Id";
            column.Caption = Globalization.ManagerUserName;
            column.EditFormSettings.Visible = DefaultBoolean.True;
            column.EditFormSettings.VisibleIndex = i + 1;
            column.VisibleIndex = i;
            column.Visible = true;
            column.EditorProperties().ComboBox(p =>
            {
                p.TextField = "Name";
                p.ValueField = "Id";
                p.ValueType = typeof(int);
                p.DataSource = UserDAL.GetUsersNamesComboList();
            });
        });



    });
    if (ViewData["EditError"] != null){
        grid.SetEditErrorText((string)ViewData["EditError"]);
    }
}
@grid.Bind(Model).GetHtml()