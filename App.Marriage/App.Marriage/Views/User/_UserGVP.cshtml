@using App.Marriage.Utils

@{
    var grid = Html.DevExpress().GridView(settings => {
        settings.Name = "UserGV";
        settings.CallbackRouteValues = new { Controller = "User", Action = "UserGVP" };

        settings.SettingsEditing.AddNewRowRouteValues = new { Controller = "User", Action = "UserGVPAddNew" };
        settings.SettingsEditing.UpdateRowRouteValues = new { Controller = "User", Action = "UserGVPUpdate" };
        settings.SettingsEditing.DeleteRowRouteValues = new { Controller = "User", Action = "UserGVPDelete" };
        settings.SettingsEditing.Mode = GridViewEditingMode.EditFormAndDisplayRow;
        settings.SettingsBehavior.ConfirmDelete = true;

        settings.CommandColumn.Visible = true;
        settings.CommandColumn.ShowNewButton = false;
        settings.CommandColumn.ShowNewButtonInHeader = true;
        settings.CommandColumn.ShowDeleteButton = false;
        settings.CommandColumn.ShowEditButton = true;
        

        settings.SettingsCommandButton.EditButton.Text = Globalization.Edit;
        settings.SettingsCommandButton.NewButton.Text = Globalization.New;

        settings.KeyFieldName = "Id";

        settings.SettingsPager.Visible = true;
        settings.Settings.ShowGroupPanel = true;
        settings.Settings.ShowFilterRow = true;
        settings.SettingsBehavior.AllowSelectByRowClick = true;

        settings.SettingsAdaptivity.AdaptivityMode = GridViewAdaptivityMode.Off;
        settings.SettingsAdaptivity.AdaptiveColumnPosition = GridViewAdaptiveColumnPosition.Right;
        settings.SettingsAdaptivity.AdaptiveDetailColumnCount = 1;
        settings.SettingsAdaptivity.AllowOnlyOneAdaptiveDetailExpanded = false;
        settings.SettingsAdaptivity.HideDataCellsAtWindowInnerWidth = 0;

        //settings.Columns.Add("Id");

        settings.Columns.Add("UserName",Globalization.UserName);

        settings.Columns.Add(column =>
        {
            column.Name = "Password";
            column.FieldName = "Password";
            column.ColumnType = MVCxGridViewColumnType.TextBox;
            column.Caption = Globalization.Pass;
            var tmp = column.PropertiesEdit as TextBoxProperties;
            tmp.Password = true;
        });

        //settings.Columns.Add("IsActive");
        settings.Columns.Add(column =>
        {
            column.Name = "IsActive";
            column.Caption = Globalization.IsActive;
            column.ColumnType = MVCxGridViewColumnType.CheckBox;
            column.ReadOnly = false;
            column.FieldName = "IsActive";

        });

        settings.Columns.Add("UserType");

        settings.Columns.Add(column =>
        {
            column.Name = "RoleID";
            column.FieldName = "RoleID";
            column.Caption = Globalization.Role;
            column.EditorProperties().ComboBox(p =>
            {
                p.ValueField = "Id";
                p.TextField = "Name";
                p.ValueType = typeof(int);
                p.DataSource = ViewData["Role"];
            });
        });

    });
    if (ViewData["EditError"] != null){
        grid.SetEditErrorText((string)ViewData["EditError"]);
    }
}
@grid.Bind(Model).GetHtml()