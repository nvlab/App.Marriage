@{
    ViewBag.Title = "ControlPanel";
}
@{
    Layout = "~/Views/Shared/_LayoutAdmin.cshtml";
    var Id = ViewBag.Id;
    var RR = ViewBag.RR;
    var P = ViewBag.P;
}
<script>
    function AcceptApplication_click(s,e) {
        var r = confirm("هل انت متاكد على قبول المشترك");
        if (r == true) {
            txt = "You pressed OK!";
            new ss().ajax("/RegisterRequest/AcceptApplication", {
                Id: @ViewBag.Id,
            }, function (e) {
                if (!e.error) {
                    location.reload();
                }
                else {
                    location.reload();
                }
            });
        }
    }
    function RejecteApplication_click(s,e) {
        var r = confirm("هل انت متاكد على رفض المشترك");
        if (r == true) {
            new ss().ajax("/RegisterRequest/RejecteApplication", {
                Id: @ViewBag.Id,
            }, function (e) {
                if (!e.error) {
                    location.reload();
                }
                else {
                    location.reload();
                }
            });
        }
    }
</script>

<!-- Content Wrapper. Contains page content -->
<div class="content-wrapper">
    <!-- Content Header (Page header) -->
    <section class="content-header">
        <h1>
            طلب تسجيل
        </h1>
        <ol class="breadcrumb">
            <li><a href="#"><i class="fa fa-dashboard"></i> لوحة التحكم</a></li>
            <li class="active">طلبات التسجيل</li>
        </ol>
    </section>
    <!-- Main content -->
    <section class="content">
        <div class="row">
            <div class="col-md-3">
                <!-- Profile Image -->
                <div class="box box-primary">
                    <div class="box-body box-profile">
                        <img class="profile-user-img img-responsive img-circle" src="~/Content/admin/dist/img/avatar5.png" alt="User profile picture">
                        <h3 class="profile-username text-center">@P.FullName</h3>
                        <p class="text-muted text-center"></p>
                        <ul class="list-group list-group-unbordered">
                            <li class="list-group-item">
                                <b> الاب: </b> <strong>@P.Father</strong>
                            </li>
                            <li class="list-group-item">
                                <b>الام : </b> <strong>@P.Mother</strong>
                            </li>
                            <li class="list-group-item">
                                <b>الجنس : </b> <strong>@P.Gender</strong>
                            </li>
                        </ul>
                            @if (ViewBag.Status == 3)
                            {
                                <text>
                                <h3 class="bg-success text-center">مقبول</h3>
                                </text>
                            }
                            @if (ViewBag.Status == 4)
                            {
                                <text>
                                <h3 class="bg-danger text-center">مرفوض</h3>
                                </text>
                            }
                            @if (ViewBag.Status != 3 && ViewBag.Status != 4 )
                            {
                                @Html.DevExpress().Button(
                                settings =>
                                {
                                    settings.Name = "AcceptApplication";
                                    settings.Text = "القبول";
                                    settings.Styles.Native = true;
                                    settings.UseSubmitBehavior = false;
                                    settings.RenderMode = ButtonRenderMode.Link;
                                    settings.ControlStyle.CssClass = "btn btn-primary btn-block";
                                    settings.ClientSideEvents.Click = "AcceptApplication_click";
                                }).GetHtml()
                                    <br />
                                    @Html.DevExpress().Button(
                                settings =>
                                {
                                    settings.Name = "RejecteApplication";
                                    settings.Text = "الرفض";
                                    settings.Styles.Native = true;
                                    settings.UseSubmitBehavior = false;
                                    settings.RenderMode = ButtonRenderMode.Link;
                                    settings.ControlStyle.CssClass = "btn btn-danger btn-block";
                                    settings.ClientSideEvents.Click = "RejecteApplication_click";
                                }).GetHtml()
                            }
                            
                    </div>
                    <!-- /.box-body -->
                </div>
                
            </div>
            <!-- /.col -->
            <div class="col-md-9">
                <div class="nav-tabs-custom">
                    <ul class="nav nav-tabs">
                        <li><a href="#info" data-toggle="tab">البيانات الشخصية</a></li>
                        <li class="active"><a href="#Question" data-toggle="tab">الاسئلة و الاجوبة</a></li>
                    </ul>
                    <div class="tab-content">                        
                        <!-- /.tab-pane -->
                        <div class="tab-pane" id="info">
                            @*@Html.Partial("Profile")*@
                        </div>
                        <div class="active tab-pane" id="Question">
                            <!-- Content -->
                            @Html.Action("RequestQuestionGVP")
                            <!-- /.Content -->
                        </div>
                        <!-- /.tab-pane -->
                    </div>
                    <!-- /.tab-content -->
                </div>
                <!-- /.nav-tabs-custom -->
            </div>
            <!-- /.col -->
        </div>
        <!-- /.row -->
    </section>
    <!-- /.content -->
</div>
<!-- /.content-wrapper -->
<script>
    Array.prototype.remove = function() {
        var what, a = arguments, L = a.length, ax;
        while (L && this.length) {
            what = a[--L];
            while ((ax = this.indexOf(what)) !== -1) {
                this.splice(ax, 1);
            }
        }
        return this;
    };


    var QuestionListHelper = {
        NewRowIndices: [],
        ConfirmPredefinedOrders: function () {
            var handler = function (values) {
                if (values === undefined && values === null) return;
                var length = values.length;
                for (var i = 0; i < length; i++) {
                    var newIndex = QuestionListHelper.AddNewIndex();
                    RequestQuestionGV.AddNewRow();
                    RequestQuestionGV.batchEditApi.EndEdit();
                    var Question_id = values[i];
                    RequestQuestionGV.batchEditApi.SetCellValue(newIndex, "Question_id", Question_id);
                    //RequestQuestionGV.batchEditApi.SetCellValue(newIndex, "RegisterRequests_Id", @ViewBag.Id);
                }
                QuestionBankPopup.Hide();
                QuestionListHelper.ClearPredefinedItemsSelection();
            };
            QuestionBankGV.GetSelectedFieldValues("Id", handler);
        },
        CancelPredefinedOrders: function () {
            QuestionBankPopup.Hide();
            QuestionListHelper.ClearPredefinedItemsSelection();
        },
        ClearPredefinedItemsSelection: function () {
            if (QuestionBankGV.GetSelectedRowCount() > 0)
                QuestionBankGV.UnselectRows();
        },
        AddNewItem: function () {
            RequestQuestionGV.AddNewRow();
            QuestionListHelper.AddNewIndex();
        },
        DeleteItem: function (event) {
            var tr = event.target.parentElement.parentElement.parentElement; // Get the row element
            var id = tr.attributes['id'].value;
            var index = id.split("DataRow")[1];
            RequestQuestionGV.DeleteRow(index);
            QuestionListHelper.NewRowIndices = QuestionListHelper.NewRowIndices.remove(parseInt(index));
        },
        AddNewIndex: function () {
            var newIndex = -1;
            if (QuestionListHelper.NewRowIndices.length > 0)
                newIndex = QuestionListHelper.NewRowIndices[QuestionListHelper.NewRowIndices.length - 1] - 1;
            QuestionListHelper.NewRowIndices.push(newIndex);
            return newIndex;
        }
    };
    function SendQuestions() {
        var r = confirm("سوف يتم ارسال الاسئلة الى المشترك هل انت متاكد ؟");
        if (r == true) {
            new ss().ajax("/RegisterRequest/SendQuestions", {
                Id: @ViewBag.Id,
            }, function (e) {
                if (!e.error) {
                    location.reload();
                }
                else {
                    location.reload();
                }
            });
        }
    }

</script>
@Html.DevExpress().PopupControl(settings =>
{
    settings.Name = "QuestionBankPopup";
    settings.Height = System.Web.UI.WebControls.Unit.Pixel(500);
    settings.Width = System.Web.UI.WebControls.Unit.Pixel(400);
    settings.PopupHorizontalAlign = PopupHorizontalAlign.WindowCenter;
    settings.PopupVerticalAlign = PopupVerticalAlign.WindowCenter;
    settings.Modal = true;

    settings.ShowHeader = false;
    settings.ShowFooter = true;

    settings.SetContent(() => { Html.RenderPartial("QuestionBank"); });
    settings.SetFooterContentTemplateContent(t =>
    {
        ViewContext.Writer.Write("<div class='container__buttons'>");
        Html.DevExpress().Button(settingsConfirmButton =>
        {
            settingsConfirmButton.Name = "ConfirmButton";
            settingsConfirmButton.Text = "أضافة";
            settingsConfirmButton.Styles.Native = true;
            settingsConfirmButton.UseSubmitBehavior = false;
            settingsConfirmButton.RenderMode = ButtonRenderMode.Link;
            settingsConfirmButton.ControlStyle.CssClass = "btn btn-primary pull-right btn-margin";
            settingsConfirmButton.ClientSideEvents.Click = "QuestionListHelper.ConfirmPredefinedOrders";
        }).Render();
        Html.DevExpress().Button(settingsCancelButton =>
        {
            settingsCancelButton.Name = "CancelButton";
            settingsCancelButton.Text = "الغاء";
            settingsCancelButton.Styles.Native = true;
            settingsCancelButton.UseSubmitBehavior = false;
            settingsCancelButton.RenderMode = ButtonRenderMode.Link;
            settingsCancelButton.ControlStyle.CssClass = "btn btn-danger pull-left btn-margin";
            settingsCancelButton.ClientSideEvents.Click = "QuestionListHelper.CancelPredefinedOrders";
        }).Render();
        ViewContext.Writer.Write("</div>");
    });
}).GetHtml()