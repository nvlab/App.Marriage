@using App.Marriage.Utils
@using App.Marriage.DAL
@{
    var grid = Html.DevExpress().GridView(settings => {
        settings.Name = "CategoryGV";
        settings.CallbackRouteValues = new { Controller = "Categories", Action = "CategoryGVP" };

        settings.SettingsEditing.AddNewRowRouteValues = new { Controller = "Categories", Action = "CategoryGVPAddNew" };
        settings.SettingsEditing.UpdateRowRouteValues = new { Controller = "Categories", Action = "CategoryGVPUpdate" };
        settings.SettingsEditing.DeleteRowRouteValues = new { Controller = "Categories", Action = "CategoryGVPDelete" };
        settings.SettingsEditing.Mode = GridViewEditingMode.EditFormAndDisplayRow;
        settings.SettingsBehavior.ConfirmDelete = true;

        settings.CommandColumn.Visible = true;
        settings.CommandColumn.ShowNewButtonInHeader = true;
        settings.CommandColumn.ShowDeleteButton = true;
        settings.CommandColumn.ShowEditButton = true;

        settings.KeyFieldName = "Id";

        settings.SettingsPager.Visible = true;
        settings.Settings.ShowGroupPanel = true;
        settings.Settings.ShowFilterRow = true;
        settings.SettingsBehavior.AllowSelectByRowClick = true;

        settings.SettingsAdaptivity.AdaptivityMode = GridViewAdaptivityMode.Off;
        settings.SettingsAdaptivity.AdaptiveColumnPosition = GridViewAdaptiveColumnPosition.Right;
        settings.SettingsAdaptivity.AdaptiveDetailColumnCount = 1;
        settings.SettingsAdaptivity.AllowOnlyOneAdaptiveDetailExpanded = false;
        settings.SettingsAdaptivity.HideDataCellsAtWindowInnerWidth = 0;

        settings.Columns.Add("Id").Visible = false;
        int i = 0;

        settings.Columns.Add(column =>
        {
            column.FieldName = "CategoryName";
            column.Caption = Globalization.CategoryName;
            column.EditFormSettings.VisibleIndex = i + 1;
            column.VisibleIndex = i;
            column.EditFormSettings.Visible = DefaultBoolean.True;
            column.Visible = true;
            column.EditorProperties().TextBox(p => {
                p.ValidationSettings.RequiredField.IsRequired = true;
            });
        });

        settings.Columns.Add(column =>
        {
            column.FieldName = "CatType";
            column.Caption = Globalization.CatType;
            column.EditFormSettings.Visible = DefaultBoolean.True;
            column.EditFormSettings.VisibleIndex = i + 1;
            column.VisibleIndex = i;
            column.Visible = true;
            column.EditorProperties().ComboBox(p =>
            {
                p.TextField = "Name";
                p.ValueField = "Id";
                p.ValueType = typeof(string);
                p.DataSource = EnumDAL.GetEnumsComboList(EnumType.CatType.ToString());
                p.ValidationSettings.RequiredField.IsRequired = true;
            });
        });

        settings.Columns.Add(column =>
        {
            column.FieldName = "Entity_Order";
            column.Caption = Globalization.Entity_Order;
            column.EditFormSettings.VisibleIndex = i + 1;
            column.VisibleIndex = i;
            column.EditFormSettings.Visible = DefaultBoolean.True;
            column.Visible = true;
            column.ColumnType = MVCxGridViewColumnType.SpinEdit;
        });

    });
    if (ViewData["EditError"] != null){
        grid.SetEditErrorText((string)ViewData["EditError"]);
    }
}
@grid.Bind(Model).GetHtml()